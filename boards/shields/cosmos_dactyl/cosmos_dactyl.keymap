/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1   &kp N2    &kp N3     &kp N4    &kp N5        &kp N6    &kp N7     &kp N8    &kp N9   &kp N0   &none
&kp ESC   &kp Q    &kp W     &kp E      &kp R     &kp T         &kp Y     &kp U      &kp I     &kp O    &kp P    &kp BSPC
&kp TAB   &kp A    &kp S     &kp D      &kp F     &kp G         &kp H     &kp J      &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z    &kp X     &kp C      &kp V     &kp B         &kp N     &kp M      &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
&kp LSHFT &kp Z    &kp X     &kp C                                                   &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
&kp LGUI  &kp LALT &kp LCTRL &mo LOWER  &kp RET   &kp SPACE     &mo RAISE  &kp RCTRL &kp RALT  &kp RGUI &none    &none
            >;
        };

        lower_layer {
            status = "reserved";
        };

        raise_layer {
            status = "reserved";
        };

        fn_layer {
            status = "reserved";
        };

    };
};
